AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CloudFormation Template was written for 
  running Kittens Carousel Static Website on EC2. 
  Kittens Carousel Static Website will be deployed 
  on Amazon Linux 2 (xxxxxx) EC2 Instance with custom 
  security group which allows http connections on port
  80 and ssh port 22 from anywhere. Kittens Carousel 
  Static Website is downloaded from my Public Github 
  repository, then deployed on Apache Web Server.

Parameters:
  instanceType: 
    Description: Select instance
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3a.micro
      - t2.nano
      - t3.nano
  Keyname:
    Description: Keypair
    Type: AWS::EC2::KeyPair::KeyName
  VPCId:
    Description: VPC Id of your existing account
    Type: AWS::EC2::VPC::Id
    
Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0742b4e673072066f
    us-east-2:
      AMI: ami-05d72852800cbf29e
    us-west-1:
      AMI: ami-0577b787189839998
    us-west-2:
      AMI: ami-0518bb0e75d3619ca
    eu-west-1:
      AMI: ami-0ffea00000f287d30
   
Resources:
  RootRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  RootInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref RootRole
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Apache Web Server for secure connection.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPCId
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        ImageId: !FindInMap 
          - RegionImageMap
          - !Ref AWS::Region
          - AMI
        InstanceType: !Ref instanceType
        
        KeyName: !Ref  Keyname 
        
        SecurityGroupIds:
          - !Ref WebServerSecurityGroup 
        
        UserData: !Base64 |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
            DATE_TIME=`date`
            chmod -R 777 /var/www/html
            echo "<html>
            <head>
                <title> Congratulations! You have created an instance from Launch Template</title>
            </head>
            <body>
                <h1>This web server is launched from launch template by YOUR_NAME</h1>
                <p>This instance is created at <b>$DATE_TIME</b></p>
                <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
            </body>
            </html>" > /var/www/html/index.html
            systemctl start httpd
            systemctl enable httpd

        IamInstanceProfile:
          Arn: !GetAtt
            - RootInstanceProfile
            - Arn

      LaunchTemplateName: MyLaunchTemplate
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: '1'
      HealthCheckType: EC2
      HealthCheckGracePeriod: 90
      MinSize: '1'
      DesiredCapacity: '1'
      MaxSize: '1'